
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx___home_psa_Desktop_genivi_navigation_master_src_navigation_build_dbus_include_poi_service_genivi_poiservice_poisearch_proxy_h__PROXY_MARSHAL_H
#define __dbusxx___home_psa_Desktop_genivi_navigation_master_src_navigation_build_dbus_include_poi_service_genivi_poiservice_poisearch_proxy_h__PROXY_MARSHAL_H

#include <dbus-c++/dbus.h>
#include <cassert>

namespace org {
namespace genivi {
namespace poiservice {

class POISearch_proxy
: public ::DBus::InterfaceProxy
{
public:

    POISearch_proxy()
    : ::DBus::InterfaceProxy("org.genivi.poiservice.POISearch")
    {
        connect_signal(POISearch_proxy, CategoriesUpdated, _CategoriesUpdated_stub);
        connect_signal(POISearch_proxy, PoiStatus, _PoiStatus_stub);
        connect_signal(POISearch_proxy, ResultListChanged, _ResultListChanged_stub);
    }

public:

    /* properties exported by this interface */
public:

    /* methods exported by this interface,
     * this functions will invoke the corresponding methods on the remote objects
     */
    ::DBus::Struct< uint16_t, uint16_t, uint16_t, std::string > GetVersion()
    {
        ::DBus::CallMessage call;
        call.member("GetVersion");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        ::DBus::Struct< uint16_t, uint16_t, uint16_t, std::string > argout;
        ri >> argout;
        return argout;
    }

    std::vector< ::DBus::Struct< uint32_t, bool > > ValidateCategories(const std::vector< uint32_t >& categories)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << categories;
        call.member("ValidateCategories");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        std::vector< ::DBus::Struct< uint32_t, bool > > argout;
        ri >> argout;
        return argout;
    }

    std::vector< ::DBus::Struct< uint32_t, std::string, bool > > GetAvailableCategories()
    {
        ::DBus::CallMessage call;
        call.member("GetAvailableCategories");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        std::vector< ::DBus::Struct< uint32_t, std::string, bool > > argout;
        ri >> argout;
        return argout;
    }

    uint32_t GetRootCategory()
    {
        ::DBus::CallMessage call;
        call.member("GetRootCategory");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        uint32_t argout;
        ri >> argout;
        return argout;
    }

    std::vector< ::DBus::Struct< uint32_t, bool > > GetChildrenCategories(const uint32_t& category)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << category;
        call.member("GetChildrenCategories");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        std::vector< ::DBus::Struct< uint32_t, bool > > argout;
        ri >> argout;
        return argout;
    }

    std::vector< ::DBus::Struct< uint32_t, bool > > GetParentCategories(const uint32_t& category)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << category;
        call.member("GetParentCategories");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        std::vector< ::DBus::Struct< uint32_t, bool > > argout;
        ri >> argout;
        return argout;
    }

    std::vector< ::DBus::Struct< ::DBus::Struct< uint32_t, std::vector< uint32_t >, ::DBus::Struct< uint8_t, ::DBus::Variant >, std::string, bool, std::string, ::DBus::Struct< uint8_t, ::DBus::Variant > >, std::vector< ::DBus::Struct< uint32_t, std::string, int32_t, std::vector< ::DBus::Struct< int32_t, std::string, ::DBus::Struct< uint8_t, ::DBus::Variant > > > > >, std::vector< ::DBus::Struct< uint32_t, std::string > > > > GetCategoriesDetails(const std::vector< uint32_t >& categories)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << categories;
        call.member("GetCategoriesDetails");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        std::vector< ::DBus::Struct< ::DBus::Struct< uint32_t, std::vector< uint32_t >, ::DBus::Struct< uint8_t, ::DBus::Variant >, std::string, bool, std::string, ::DBus::Struct< uint8_t, ::DBus::Variant > >, std::vector< ::DBus::Struct< uint32_t, std::string, int32_t, std::vector< ::DBus::Struct< int32_t, std::string, ::DBus::Struct< uint8_t, ::DBus::Variant > > > > >, std::vector< ::DBus::Struct< uint32_t, std::string > > > > argout;
        ri >> argout;
        return argout;
    }

    uint32_t CreatePoiSearchHandle()
    {
        ::DBus::CallMessage call;
        call.member("CreatePoiSearchHandle");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        uint32_t argout;
        ri >> argout;
        return argout;
    }

    void DeletePoiSearchHandle(const uint32_t& poiSearchHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        call.member("DeletePoiSearchHandle");
        ::DBus::Message ret = invoke_method (call);
    }

    void SetCenter(const uint32_t& poiSearchHandle, const ::DBus::Struct< double, double, double >& location)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << location;
        call.member("SetCenter");
        ::DBus::Message ret = invoke_method (call);
    }

    void SetRouteHandle(const uint32_t& poiSearchHandle, const uint32_t& sessionHandle, const uint32_t& routeHandle, const uint32_t& startSearchOffset, const uint32_t& endSearchOffset)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << sessionHandle;
        wi << routeHandle;
        wi << startSearchOffset;
        wi << endSearchOffset;
        call.member("SetRouteHandle");
        ::DBus::Message ret = invoke_method (call);
    }

    void SetCategories(const uint32_t& poiSearchHandle, const std::vector< ::DBus::Struct< uint32_t, uint32_t > >& poiCategories)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << poiCategories;
        call.member("SetCategories");
        ::DBus::Message ret = invoke_method (call);
    }

    void SetAttributes(const uint32_t& poiSearchHandle, const std::vector< ::DBus::Struct< uint32_t, uint32_t, int32_t, ::DBus::Struct< uint8_t, ::DBus::Variant >, int32_t, bool > >& poiAttributes)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << poiAttributes;
        call.member("SetAttributes");
        ::DBus::Message ret = invoke_method (call);
    }

    void StartPoiSearch(const uint32_t& poiSearchHandle, const std::string& inputString, const int32_t& sortOption)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << inputString;
        wi << sortOption;
        call.member("StartPoiSearch");
        ::DBus::Message ret = invoke_method (call);
    }

    void CancelPoiSearch(const uint32_t& poiSearchHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        call.member("CancelPoiSearch");
        ::DBus::Message ret = invoke_method (call);
    }

    void StartPoiProximityAlert(const uint32_t& poiSearchHandle, const std::string& inputString, const int32_t& sortOption)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << inputString;
        wi << sortOption;
        call.member("StartPoiProximityAlert");
        ::DBus::Message ret = invoke_method (call);
    }

    void CancelPoiProximityAlert(const uint32_t& poiSearchHandle)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        call.member("CancelPoiProximityAlert");
        ::DBus::Message ret = invoke_method (call);
    }

    void RequestResultList(const uint32_t& poiSearchHandle, const uint16_t& offset, const uint16_t& maxWindowSize, const std::vector< uint32_t >& attributeList, int32_t& statusValue, uint16_t& resultListSize, std::vector< ::DBus::Struct< uint32_t, uint32_t, int32_t, std::vector< ::DBus::Struct< uint32_t, int32_t, ::DBus::Struct< uint8_t, ::DBus::Variant > > > > >& resultListWindow)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << poiSearchHandle;
        wi << offset;
        wi << maxWindowSize;
        wi << attributeList;
        call.member("RequestResultList");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        ri >> statusValue;
        ri >> resultListSize;
        ri >> resultListWindow;
    }

    std::vector< ::DBus::Struct< ::DBus::Struct< uint32_t, std::string, ::DBus::Struct< double, double, double > >, std::vector< uint32_t >, std::vector< ::DBus::Struct< uint32_t, int32_t, ::DBus::Struct< uint8_t, ::DBus::Variant > > > > > GetPoiDetails(const std::vector< uint32_t >& id)
    {
        ::DBus::CallMessage call;
        ::DBus::MessageIter wi = call.writer();

        wi << id;
        call.member("GetPoiDetails");
        ::DBus::Message ret = invoke_method (call);
        ::DBus::MessageIter ri = ret.reader();

        std::vector< ::DBus::Struct< ::DBus::Struct< uint32_t, std::string, ::DBus::Struct< double, double, double > >, std::vector< uint32_t >, std::vector< ::DBus::Struct< uint32_t, int32_t, ::DBus::Struct< uint8_t, ::DBus::Variant > > > > > argout;
        ri >> argout;
        return argout;
    }


public:

    /* signal handlers for this interface
     */
    virtual void CategoriesUpdated(const std::vector< ::DBus::Struct< uint32_t, uint16_t > >& poiCategories) = 0;
    virtual void PoiStatus(const uint32_t& poiSearchHandle, const int32_t& statusValue) = 0;
    virtual void ResultListChanged(const uint32_t& poiSearchHandle, const uint16_t& resultListSize) = 0;

private:

    /* unmarshalers (to unpack the DBus message before calling the actual signal handler)
     */
    void _CategoriesUpdated_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        std::vector< ::DBus::Struct< uint32_t, uint16_t > > poiCategories;
        ri >> poiCategories;
        CategoriesUpdated(poiCategories);
    }
    void _PoiStatus_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t poiSearchHandle;
        ri >> poiSearchHandle;
        int32_t statusValue;
        ri >> statusValue;
        PoiStatus(poiSearchHandle, statusValue);
    }
    void _ResultListChanged_stub(const ::DBus::SignalMessage &sig)
    {
        ::DBus::MessageIter ri = sig.reader();

        uint32_t poiSearchHandle;
        ri >> poiSearchHandle;
        uint16_t resultListSize;
        ri >> resultListSize;
        ResultListChanged(poiSearchHandle, resultListSize);
    }
};

} } } 
#endif //__dbusxx___home_psa_Desktop_genivi_navigation_master_src_navigation_build_dbus_include_poi_service_genivi_poiservice_poisearch_proxy_h__PROXY_MARSHAL_H
