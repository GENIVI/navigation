Release date of the file: 17-03-2015 
Status: OK

Project:
Navigation software based on Navit and compliant with the Navigation APIs standardized by the GENIVI Alliance
This project is one of the navigation-service common projects that implements the GENIVI navigation APIs.

More:
The GENIVI APIs are implemented into navit plugins, running on DBus. The HMI is made in Qml
See also other navigation projects like proof of concepts implemented for poi-service, traffic-info and positioning 

What is in:
This folder contains scripts for building Navit and the GENIVI plugins. It runs only the navigation middleware (without the HMI)
FYI: the application (with the HMI) is located into git://git.projects.genivi.org/lbs/navigation-application.git
     it's possible to build and run the whole stuff directly from that repository

Author: 
Martin Schaller <martin.schaller@it-schaller.de>
Philippe Colliot philippe.colliot@mpsa.com
Marco Residori marco.residori@xse.de

License: 
See headers and LICENSE file

Test target: 
Ubuntu 14.04 LTS

To build the code:

To build the navigation middleware you need first to clone some additional stuff:
./build.sh clone

Apply a patch (see below for a short history of upgrade)
cd ../navit
patch -p0 -i ../patches/search_list_get_unique.diff
cd ../script

So, build it:
./build.sh make

And run:
./run 

Annexe:

Issues during upgrade of Navit:
The version has been upgraded from version r5532 to version r6025

Note 1: There was an issue with the latest version of ksvg2png, that doesn't requires --output into the command line
The issue is fixed by the r5827

Note 2: The r5549 removed the  get_unique features used by GetSpell
So, please apply the patch
patch -p0 -i ../patches/search_list_get_unique.diff

Note 3: The r5822 removed the attribute distance_metric, it's fixed by the r5898


CMakeLists.txt organization:

src/navigation/CMakeLists.txt
To clone the sources located into different repositories
To get the map

src/navigation/map/CMakeLists.txt

For using the layer manager, you need to set the env variable and the paths:
source set-ilm-env.sh

To build with the layer manager:
./build.sh makelm

