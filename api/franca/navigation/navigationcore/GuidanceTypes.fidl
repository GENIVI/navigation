/* 
SPDX-License-Identifier: MPL-2.0
Copyright (C) 2014, PCA Peugeot Citroën, XS Embedded GmbH, TomTom International B.V., Continental Automotive GmbH, BMW Car IT GmbH,  Alpine Electronics R&D Europe GmbH, AISIN AW CO., LTD.,  Neusoft Technology Solutions GmbH, Jaguar Land Rover Limited, Visteon Corporation, Elektrobit Automotive GmbH
This Source Code Form is subject to the terms of the
Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with
this file, you can obtain one at http://mozilla.org/MPL/2.0/.
*/

package org.genivi.navigation.navigationcore
import org.genivi.navigation.NavigationTypes.* from "../NavigationTypes.fidl"

typeCollection GuidanceTypes {
	
	enumeration ManueverPhase extends BasicEnum {
		CRUISE = "0x0050"
		MANEUVER_APPEARED = "0x0051"
		PRE_ADVICE = "0x0052"
		ADVICE = "0x0053"
		PASSED = "0x0054"
	}

	enumeration Side extends BasicEnum {
		LEFT = "0x0080"
		RIGHT = "0x0083"
		NOT_AVAILABLE = "0x0002"
	}

	enumeration RoadProperty extends BasicEnum {
		
	}
	
	enumeration ManeuverType extends BasicEnum {
		STRAIGHT_ON					= "0x0070"
		TURN						= "0x0078"
		CROSSROAD					= "0x0071"
		ROUNDABOUT					= "0x0072"
		HIGHWAY_ENTER				= "0x0073"
		HIGHWAY_EXIT				= "0x0074"
		BIFURCATION					= "0x0079"
		HIGHWAY_CHANGE_LANE			= "0x0075"
		DESTINATION					= "0x0076"
		WAYPOINT					= "0x0077"
	}

	enumeration ManeuverDirectionType extends BasicEnum {
		LENGTH						= "0x0031"
		DIRECTION					= "0x0240"
		EXIT_NUMBER					= "0x0241"
		ROAD_FORM					= "0x0242"
		LANE_INFO					= "0x0243"
	}

	enumeration LaneType extends BasicEnum {
		LANE_INFO_BITMASK_STRAIGHT		= "0x0001"
		LANE_INFO_BITMASK_SLIGHTRIGHT	= "0x0002"
		LANE_INFO_BITMASK_RIGHT			= "0x0004"
		LANE_INFO_BITMASK_SHARPRIGHT	= "0x0008"
		LANE_INFO_BITMASK_RIGHTUTURN	= "0x0010"
		LANE_INFO_BITMASK_SLIGHTLEFT	= "0x0020"
		LANE_INFO_BITMASK_LEFT			= "0x0040"
		LANE_INFO_BITMASK_SHARPLEFT		= "0x0080"
		LANE_INFO_BITMASK_LEFTUTURN		= "0x1000"
	}
	
	enumeration LaneDivider extends BasicEnum {
		DIVIDER_UNDEFINED				= "0x0250"
		DIVIDER_INTERRUPTEDLONG			= "0x0251"
		DIVIDER_INTERRUPTEDSHORT		= "0x0252"
		DIVIDER_SOLIDSINGLE				= "0x0253"
		DIVIDER_SOLIDDOUBLE				= "0x0254"
		DIVIDER_SOLIDINTERRUPTED		= "0x0255"
		DIVIDER_INTERRUPTEDSOLID		= "0x0256"
	}

	enumeration CalculationMode extends BasicEnum {
		ALL_MANUAL						= "0x0090"
		ALL_AUTOMATIC					= "0x0091"
		TRAFFIC_MANUAL					= "0x0092"
		OFF_ROUTE_MANUAL				= "0x0093"
	}

	enumeration GuidanceStatus extends BasicEnum {
		ACTIVE							= "0x0060"
		INACTIVE						= "0x0061"
	}
	
	enumeration PromptMode extends BasicEnum {
		DISABLED_PROMPT					= "0x0041"
		AUTOMATIC_PROMPT				= "0x0042"
		MANUAL_PROMPT					= "0x0043"
	}
	
	enumeration RouteChangedCause extends BasicEnum {
		TRAFFIC							= "0x0210"
		OFF_ROUTE						= "0x0211"
		MANUAL							= "0x0212"
	}
	
	enumeration ManeuverDirection extends BasicEnum {
		STRAIGHT_ON						= "0x0070"
		LEFT							= "0x0080"
		SLIGHT_LEFT						= "0x0081"
		HARD_LEFT						= "0x0082"
		RIGHT							= "0x0083"
		SLIGHT_RIGHT					= "0x0084"
		HARD_RIGHT						= "0x0085"
		UTURN_RIGHT						= "0x0086"
		UTURN_LEFT						= "0x0087"
	}
	
	struct tWaypointStruct {
		UInt32 waypointOffset
		UInt32 travelTime
		Int32 direction
		Side side
		Int16 timeZone
		Int16 daylightSavingTime
		Boolean isDestination
		UInt16 number
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversListElem6Elem4
	**>
	struct ManeuverSegment {
		ManeuverType maneuver
		UInt16 maneuverLength
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversListElem6Elem5
	**>
	struct ManeuverTurn {
		ManeuverDirection maneuverDirection
		String exitNumber
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversListElem6
	**>
	struct tManeuverItem {
		UInt32 offsetOfManeuver
		UInt32 travelTime
		Int32 direction
		ManeuverSegment segment
		ManeuverTurn turnTo
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversList
	**>
	struct Maneuver {
		String roadNumberAfterManeuver
		String roadNameAfterManeuver
		UInt16 roadPropertyAfterManeuver
		Side drivingSide
		UInt32 offsetOfNextManeuver
		tManeuverItem[] items
	}

}