// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2014, PCA Peugeot Citroï¿½n, XS Embedded GmbH, TomTom International B.V., Continental Automotive GmbH, BMW Car IT GmbH,  Alpine Electronics R&D Europe GmbH, AISIN AW CO., LTD.,  Neusoft Technology Solutions GmbH, Jaguar Land Rover Limited, Visteon Corporation, Elektrobit Automotive GmbH
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with
// this file, you can obtain one at http://mozilla.org/MPL/2.0/.

package org.genivi.navigation.navigationcore
import org.genivi.navigation.NavigationTypes.* from "../NavigationTypes.fidl"

typeCollection GuidanceTypes {
	
//	enumeration Side extends BasicEnum {
	enumeration Side {
		INVALID 	= 0
		LEFT = 128
		RIGHT = 131
		NOT_AVAILABLE = 2
	}

//	enumeration RoadProperty extends BasicEnum {
	enumeration RoadProperty {
		INVALID 	= 0
		
	}
	
//	enumeration LaneType extends BasicEnum {
	enumeration LaneType {
		INVALID 	= 0
		LANE_INFO_BITMASK_STRAIGHT		= 1
		LANE_INFO_BITMASK_SLIGHTRIGHT	= 2
		LANE_INFO_BITMASK_RIGHT			= 4
		LANE_INFO_BITMASK_SHARPRIGHT	= 8
		LANE_INFO_BITMASK_RIGHTUTURN	= 16
		LANE_INFO_BITMASK_SLIGHTLEFT	= 32
		LANE_INFO_BITMASK_LEFT			= 64
		LANE_INFO_BITMASK_SHARPLEFT		= 128
		LANE_INFO_BITMASK_LEFTUTURN		= 256
	}
	
//	enumeration PromptMode extends BasicEnum { //Base 0x0040
	enumeration PromptMode { //Base 0x0040
		INVALID 	= 0
		DISABLED_PROMPT					= 65
		AUTOMATIC_PROMPT				= 66
		MANUAL_PROMPT					= 67
	}
	
//	enumeration ManeuverPhase extends BasicEnum { //Base 0x0050
	enumeration ManeuverPhase { //Base 0x0050
		INVALID 	= 0
		CRUISE 				= 80
		MANEUVER_APPEARED 	= 81
		PRE_ADVICE 			= 82
		ADVICE 				= 83
		PASSED 				= 84
	}

//	enumeration GuidanceStatus extends BasicEnum { //Base 0x0060
	enumeration GuidanceStatus{ //Base 0x0060
		INVALID 	= 0
		ACTIVE							= 96
		INACTIVE						= 97
	}
	
//	enumeration ManeuverType extends BasicEnum { //Base 0x0070
	enumeration ManeuverType { //Base 0x0070
		INVALID 	= 0
		STRAIGHT_ON					= 112
		CROSSROAD					= 113
		ROUNDABOUT					= 114
		HIGHWAY_ENTER				= 115
		HIGHWAY_EXIT				= 116
		FOLLOW_SPECIFIC_LANE		= 117
		DESTINATION					= 118
		WAYPOINT					= 119
		TURN						= 120
		BIFURCATION					= 121
	}
	
//	enumeration ManeuverDirection extends BasicEnum { //Base 0x0080
	enumeration ManeuverDirection { //Base 0x0080
		INVALID 	= 0
		LEFT							= 128
		SLIGHT_LEFT						= 129
		HARD_LEFT						= 130
		RIGHT							= 131
		SLIGHT_RIGHT					= 132
		HARD_RIGHT						= 133
		UTURN_RIGHT						= 134
		UTURN_LEFT						= 135
	}
	
//	enumeration CalculationMode extends BasicEnum { //Base 0x0090
	enumeration CalculationMode { //Base 0x0090
		INVALID 	= 0
		ALL_MANUAL						= 144
		ALL_AUTOMATIC					= 145
		TRAFFIC_MANUAL					= 146
		OFF_ROUTE_MANUAL				= 147
	}

//	enumeration RouteChangedCause extends BasicEnum { //Base 0x0210
	enumeration RouteChangedCause { //Base 0x0210
		INVALID 	= 0
		TRAFFIC							= 528
		OFF_ROUTE						= 529
		MANUAL							= 530
	}

//	enumeration ManeuverDirectionType extends BasicEnum { //Base 0x0240
	enumeration ManeuverDirectionType{ //Base 0x0240
		INVALID 	= 0
		DIRECTION					= 576
		EXIT_NUMBER					= 577
		ROAD_FORM					= 578
		LANE_INFO					= 579
	}

//	enumeration LaneDivider extends BasicEnum { //Base 0x0250
	enumeration LaneDivider { //Base 0x0250
		INVALID 	= 0
		DIVIDER_UNDEFINED				= 592
		DIVIDER_INTERRUPTEDLONG			= 593
		DIVIDER_INTERRUPTEDSHORT		= 594
		DIVIDER_SOLIDSINGLE				= 595
		DIVIDER_SOLIDDOUBLE				= 596
		DIVIDER_SOLIDINTERRUPTED		= 597
		DIVIDER_INTERRUPTEDSOLID		= 598
	}

	struct tWaypointStruct {
		UInt32 waypointOffset
		UInt32 travelTime
		Int32 direction
		Side side
		Int16 timeZone
		Int16 daylightSavingTime
		Boolean isDestination
		UInt16 number
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversListElem6Elem4
	**>
	struct ManeuverSegment {
		ManeuverType maneuver
		UInt16 maneuverLength
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversListElem6Elem5
	**>
	struct ManeuverTurn {
		ManeuverDirection maneuverDirection
		String exitNumber
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversListElem6
	**>
	struct tManeuverItem {
		UInt32 offsetOfManeuver
		UInt32 travelTime
		Int32 direction
		ManeuverSegment segment
		ManeuverTurn turnTo
	}

	<**
		@description : struct generated for DBus argument GetManeuversList_maneuversList
	**>
	struct Maneuver {
		String roadNumberAfterManeuver
		String roadNameAfterManeuver
		UInt16 roadPropertyAfterManeuver
		Side drivingSide
		UInt32 offsetOfNextManeuver
		tManeuverItem[] items
	}

}